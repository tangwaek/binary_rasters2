# # if list list elements are raster layers
#
# if(class(y) != "list"){
#   y <- as.list(y)
#
#   for (i in seq_along(y)) {
#     if(class(y[[i]]) !=RasterLayer)
#       stop("elments of the list must be raster layers")
#   }
# }
#
# if (length(x) != length(y)) {
#   stop("`x` and `y` must be the same length", call. = FALSE)
# }
#
binary_list <- list()
for (i in seq_along(y)) {
binary_list[[i]] <- matrix(c(0, y[i], 0, y[i],1, 1),
ncol = 3, byrow=TRUE)
}
ras_rcl<- purrr::map2(x, binary_list,
function(.x, .y) raster::reclassify(.x, .y))
map_sum <- sum(brick(ras_rcl))
ras_area <- sapply(ras_rcl,
function(x) sum(x[]==1, na.rm = TRUE)*prod(res(x)) * 1e-6)
avg_area <- sum(ras_area)/length(ras_rcl)
par(mfrow =c(1, 2))
# pie chart
lbls <- paste("species", 1:length(ras_area), sep="")
pie(ras_area, lbls,
main = "species by area (km2)",
col = rainbow(length(ras_area)))
# map plot
plot(map_sum,
main= "species diversity map")
}
binary_rasters(ras_list,thd_sq)
binary_rasters <- function(x, y) { # x is list a raster, y is a vector
# unit testing and background checks
# if(class(x) != "numeric") {
#   stop("Please provide a numeric input")
# }
#
# # check  y is a list, else convert to a list and further check if
# # if list list elements are raster layers
#
# if(class(y) != "list"){
#   y <- as.list(y)
#
#   for (i in seq_along(y)) {
#     if(class(y[[i]]) !=RasterLayer)
#       stop("elments of the list must be raster layers")
#   }
# }
#
# if (length(x) != length(y)) {
#   stop("`x` and `y` must be the same length", call. = FALSE)
# }
#
binary_list <- list()
for (i in seq_along(y)) {
binary_list[[i]] <- matrix(c(0, y[i], 0, y[i],1, 1),
ncol = 3, byrow=TRUE)
}
ras_rcl<- purrr::map2(x, binary_list,
function(.x, .y) raster::reclassify(.x, .y))
map_sum <- sum(brick(ras_rcl))
ras_area <- sapply(ras_rcl,
function(x) sum(x[]==1, na.rm = TRUE)*prod(res(x)) * 1e-6)
avg_area <- sum(ras_area)/length(ras_rcl)
par(mfrow =c(1, 2))
# pie chart
lbls <- paste("species", 1:length(ras_area), sep="")
pie(ras_area, lbls,
main = "species by area (km2)",
col = rainbow(length(ras_area)))
# map plot
plot(map_sum,
main= "species diversity map")
par(mfrow=c(1,1))
print(paste("average area covered by species==",avg_area,"km2", sep="" ))
}
binary_rasters(ras_list,thd_sq)
binary_rasters <- function(x, y) { # x is list a raster, y is a vector
# unit testing and background checks
# if(class(x) != "numeric") {
#   stop("Please provide a numeric input")
# }
#
# # check  y is a list, else convert to a list and further check if
# # if list list elements are raster layers
#
# if(class(y) != "list"){
#   y <- as.list(y)
#
#   for (i in seq_along(y)) {
#     if(class(y[[i]]) !=RasterLayer)
#       stop("elments of the list must be raster layers")
#   }
# }
#
# if (length(x) != length(y)) {
#   stop("`x` and `y` must be the same length", call. = FALSE)
# }
#
binary_list <- list()
for (i in seq_along(y)) {
binary_list[[i]] <- matrix(c(0, y[i], 0, y[i],1, 1),
ncol = 3, byrow=TRUE)
}
ras_rcl<- purrr::map2(x, binary_list,
function(.x, .y) raster::reclassify(.x, .y))
map_sum <- sum(brick(ras_rcl))
ras_area <- sapply(ras_rcl,
function(x) sum(x[]==1, na.rm = TRUE)*prod(res(x)) * 1e-6)
avg_area <- sum(ras_area)/length(ras_rcl)
par(mfrow =c(1, 2))
# pie chart
lbls <- paste("species", 1:length(ras_area), sep="")
pie(ras_area, lbls,
main = "species by area (km2)",
col = rainbow(length(ras_area)))
# map plot
plot(map_sum,
main= "species diversity map")
par(mfrow=c(1,1))
print(
paste("average area covered by species = ",round(avg_area),2,"km2", sep="" ))
}
binary_rasters(ras_list,thd_sq)
x= 9.0777
round(x, 2)
binary_rasters <- function(x, y) { # x is list a raster, y is a vector
# unit testing and background checks
# if(class(x) != "numeric") {
#   stop("Please provide a numeric input")
# }
#
# # check  y is a list, else convert to a list and further check if
# # if list list elements are raster layers
#
# if(class(y) != "list"){
#   y <- as.list(y)
#
#   for (i in seq_along(y)) {
#     if(class(y[[i]]) !=RasterLayer)
#       stop("elments of the list must be raster layers")
#   }
# }
#
# if (length(x) != length(y)) {
#   stop("`x` and `y` must be the same length", call. = FALSE)
# }
#
binary_list <- list()
for (i in seq_along(y)) {
binary_list[[i]] <- matrix(c(0, y[i], 0, y[i],1, 1),
ncol = 3, byrow=TRUE)
}
ras_rcl<- purrr::map2(x, binary_list,
function(.x, .y) raster::reclassify(.x, .y))
map_sum <- sum(brick(ras_rcl))
ras_area <- sapply(ras_rcl,
function(x) sum(x[]==1, na.rm = TRUE)*prod(res(x)) * 1e-6)
avg_area <- sum(ras_area)/length(ras_rcl)
par(mfrow =c(1, 2))
# pie chart
lbls <- paste("species", 1:length(ras_area), sep="")
pie(ras_area, lbls,
main = "species by area (km2)",
col = rainbow(length(ras_area)))
# map plot
plot(map_sum,
main= "species diversity map")
par(mfrow=c(1,1))
print(
paste("average area covered by species = ",round(avg_area, 2),"km2", sep="" ))
}
binary_rasters(ras_list,thd_sq)
dev.off()
binary_rasters <- function(x, y) { # x is list a raster, y is a vector
# unit testing and background checks
# if(class(x) != "numeric") {
#   stop("Please provide a numeric input")
# }
#
# # check  y is a list, else convert to a list and further check if
# # if list list elements are raster layers
#
# if(class(y) != "list"){
#   y <- as.list(y)
#
#   for (i in seq_along(y)) {
#     if(class(y[[i]]) !=RasterLayer)
#       stop("elments of the list must be raster layers")
#   }
# }
#
# if (length(x) != length(y)) {
#   stop("`x` and `y` must be the same length", call. = FALSE)
# }
#
binary_list <- list()
for (i in seq_along(y)) {
binary_list[[i]] <- matrix(c(0, y[i], 0, y[i],1, 1),
ncol = 3, byrow=TRUE)
}
ras_rcl<- purrr::map2(x, binary_list,
function(.x, .y) raster::reclassify(.x, .y))
map_sum <- sum(brick(ras_rcl))
ras_area <- sapply(ras_rcl,
function(x) sum(x[]==1, na.rm = TRUE)*prod(res(x)) * 1e-6)
avg_area <- sum(ras_area)/length(ras_rcl)
par(mfrow =c(1, 2))
# pie chart
lbls <- paste("species", 1:length(ras_area), sep="")
pie(ras_area, lbls,
main = "species by area (km2)",
col = rainbow(length(ras_area)))
# map plot
plot(map_sum,
main= "species diversity map")
par(mfrow=c(1,1))
print(
paste("average area covered by species = ",round(avg_area, 2),"km2", sep="" ))
}
binary_rasters(ras_list,thd_sq)
binary_rasters <- function(x, y) { # x is list a raster, y is a vector
# unit testing and background checks
# if(class(x) != "numeric") {
#   stop("Please provide a numeric input")
# }
#
# # check  y is a list, else convert to a list and further check if
# # if list list elements are raster layers
#
# if(class(y) != "list"){
#   y <- as.list(y)
#
#   for (i in seq_along(y)) {
#     if(class(y[[i]]) !=RasterLayer)
#       stop("elments of the list must be raster layers")
#   }
# }
#
# if (length(x) != length(y)) {
#   stop("`x` and `y` must be the same length", call. = FALSE)
# }
#
binary_list <- list()
for (i in seq_along(y)) {
binary_list[[i]] <- matrix(c(0, y[i], 0, y[i],1, 1),
ncol = 3, byrow=TRUE)
}
ras_rcl<- purrr::map2(x, binary_list,
function(.x, .y) raster::reclassify(.x, .y))
map_sum <- sum(brick(ras_rcl))
ras_area <- sapply(ras_rcl,
function(x) sum(x[]==1, na.rm = TRUE)*prod(res(x)) * 1e-6)
avg_area <- sum(ras_area)/length(ras_rcl)
par(mfrow =c(1, 2))
# map plot
plot(map_sum,
main= "species diversity map")
lbls <- paste("species", 1:length(ras_area), sep="")
pie(ras_area, lbls,
main = "species by area (km2)",
col = rainbow(length(ras_area)))
# pie chart
plot(map_sum,
main= "species diversity map")
par(mfrow=c(1,1))
print(
paste("average area covered by species = ",round(avg_area, 2),"km2", sep="" ))
}
binary_rasters(ras_list,thd_sq)
dev.off()
binary_rasters <- function(x, y) { # x is list a raster, y is a vector
# unit testing and background checks
# if(class(x) != "numeric") {
#   stop("Please provide a numeric input")
# }
#
# # check  y is a list, else convert to a list and further check if
# # if list list elements are raster layers
#
# if(class(y) != "list"){
#   y <- as.list(y)
#
#   for (i in seq_along(y)) {
#     if(class(y[[i]]) !=RasterLayer)
#       stop("elments of the list must be raster layers")
#   }
# }
#
# if (length(x) != length(y)) {
#   stop("`x` and `y` must be the same length", call. = FALSE)
# }
#
binary_list <- list()
for (i in seq_along(y)) {
binary_list[[i]] <- matrix(c(0, y[i], 0, y[i],1, 1),
ncol = 3, byrow=TRUE)
}
ras_rcl<- purrr::map2(x, binary_list,
function(.x, .y) raster::reclassify(.x, .y))
map_sum <- sum(brick(ras_rcl))
ras_area <- sapply(ras_rcl,
function(x) sum(x[]==1, na.rm = TRUE)*prod(res(x)) * 1e-6)
avg_area <- sum(ras_area)/length(ras_rcl)
par(mfrow =c(1, 2))
# map plot
plot(map_sum,
main= "species diversity map")
# pie chart
lbls <- paste("species", 1:length(ras_area), sep="")
pie(ras_area, lbls,
main = "species by area (km2)",
col = rainbow(length(ras_area)))
par(mfrow=c(1,1))
print(
paste("average area covered by species = ",round(avg_area, 2),"km2", sep="" ))
}
binary_rasters(ras_list,thd_sq)
library(binaryRasters)
library(devtools)
install_github('tangwaek/binary_rasters')
install_github('tangwaek/binary_maps')
library(devtools)
install_github('tangwaek/binary_rasters')
library(binaryRasters)
fl <- setwd("N:")  # set working directory
start <- function(){
thd <- read.csv("thresholds.csv")
names(thd)[1] <- "species"
thd <- thd[1:3,]
thd_sq <- thd$thd_mxt
return(thd_sq)  #  get the main data
}
thd_sq <- start()
#-------------load raster files  ---------------------------------
library(raster)
ras_fun <- function(){
ras_files <- list.files(".", pattern = ".tif$", full.names = TRUE )
ras_list <- list()
for (r in seq_along(ras_files)) {
ras_list[[r]] <- raster(ras_files[r])
}
return(ras_list) #main data
}
ras_list <- ras_fun()
binary_rasters(thd_sq, ras_list)
binary_rasters(ras_list,thd_sq)
detach("package:binaryRasters", unload = TRUE)
install_github('tangwaek/binary_maps')
binary_rasters(ras_list,thd_sq)
binary_maps(ras_list,thd_sq)
library(binaryRasters)
binary_rasters(ras_list,thd_sq)
binary_rasters <- function(x, y) { # x is list a raster, y is a vector
# unit testing and background checks
if(class(x) != "numeric") {
stop("Please provide a numeric input")
}
# check  y is a list, else convert to a list and further check if
# if list list elements are raster layers
if(class(y) != "list"){
y <- as.list(y)
for (i in seq_along(y)) {
if(class(y[[i]]) !=RasterLayer)
stop("elments of the list must be raster layers")
}
}
if (length(x) != length(y)) {
stop("`x` and `y` must be the same length", call. = FALSE)
}
binary_list <- list()
for (i in seq_along(y)) {
binary_list[[i]] <- matrix(c(0, y[i], 0, y[i],1, 1),
ncol = 3, byrow=TRUE)
}
ras_rcl<- purrr::map2(x, binary_list,
function(.x, .y) raster::reclassify(.x, .y))
map_sum <- sum(brick(ras_rcl))
ras_area <- sapply(ras_rcl,
function(x) sum(x[]==1, na.rm = TRUE)*prod(res(x)) * 1e-6)
avg_area <- sum(ras_area)/length(ras_rcl)
par(mfrow =c(1, 2))
# map plot
plot(map_sum,
main= "species diversity map")
# pie chart
lbls <- paste("species", 1:length(ras_area), sep="")
pie(ras_area, lbls,
main = "species by area (km2)",
col = rainbow(length(ras_area)))
par(mfrow=c(1,1))
print(
paste("average area covered by species = ",round(avg_area, 2),"km2", sep="" ))
}
binary_rasters(ras_list,thd_sq)
binary_rasters <- function(x, y) { # x is list a raster, y is a vector
# unit testing and background checks
if(class(y) != "numeric") {
stop("Please provide a numeric input")
}
# check  y is a list, else convert to a list and further check if
# if list list elements are raster layers
if(class(x) != "list"){
x <- as.list(x)
for (i in seq_along(x)) {
if(class(x[[i]]) !=RasterLayer)
stop("elments of the list must be raster layers")
}
}
if (length(x) != length(y)) {
stop("`x` and `y` must be the same length", call. = FALSE)
}
binary_list <- list()
for (i in seq_along(y)) {
binary_list[[i]] <- matrix(c(0, y[i], 0, y[i],1, 1),
ncol = 3, byrow=TRUE)
}
ras_rcl<- purrr::map2(x, binary_list,
function(.x, .y) raster::reclassify(.x, .y))
map_sum <- sum(brick(ras_rcl))
ras_area <- sapply(ras_rcl,
function(x) sum(x[]==1, na.rm = TRUE)*prod(res(x)) * 1e-6)
avg_area <- sum(ras_area)/length(ras_rcl)
par(mfrow =c(1, 2))
# map plot
plot(map_sum,
main= "species diversity map")
# pie chart
lbls <- paste("species", 1:length(ras_area), sep="")
pie(ras_area, lbls,
main = "species by area (km2)",
col = rainbow(length(ras_area)))
par(mfrow=c(1,1))
print(
paste("average area covered by species = ",round(avg_area, 2),"km2", sep="" ))
}
binary_rasters(ras_list,thd_sq)
library(devtools)
install_github('tangwaek/binary_rasters')
library(binaryRasters)
thd_sq <- system.file("extdata", "thd_sq.csv", package="binaryRasters")
fl <- setwd("N:")  # set working directory
start <- function(){
thd <- read.csv("thresholds.csv")
names(thd)[1] <- "species"
thd <- thd[1:3,]
thd_sq <- thd$thd_mxt
return(thd_sq)  #  get the main data
}
thd_sq <- start()
#-------------load raster files  ---------------------------------
library(raster)
ras_fun <- function(){
ras_files <- list.files(".", pattern = ".tif$", full.names = TRUE )
ras_list <- list()
for (r in seq_along(ras_files)) {
ras_list[[r]] <- raster(ras_files[r])
}
return(ras_list) #main data
}
ras_list <- ras_fun()
binary_rasters(ras_list,thd_sq)
binary_rasters <- function(x, y) { # x is list a raster, y is a vector
# unit testing and background checks
if(class(y) != "numeric") {
stop("Please provide a numeric input")
}
# check  y is a list, else convert to a list and further check if
# if list list elements are raster layers
if(class(x) != "list"){
x <- as.list(x)
for (i in seq_along(x)) {
if(class(x[[i]]) !=RasterLayer)
stop("elments of the list must be raster layers")
}
}
if (length(x) != length(y)) {
stop("`x` and `y` must be the same length", call. = FALSE)
}
binary_list <- list()
for (i in seq_along(y)) {
binary_list[[i]] <- matrix(c(0, y[i], 0, y[i],1, 1),
ncol = 3, byrow=TRUE)
}
ras_rcl<- purrr::map2(x, binary_list,
function(.x, .y) raster::reclassify(.x, .y))
map_sum <- sum(brick(ras_rcl))
ras_area <- sapply(ras_rcl,
function(x) sum(x[]==1, na.rm = TRUE)*prod(res(x)) * 1e-6)
avg_area <- sum(ras_area)/length(ras_rcl)
par(mfrow =c(1, 2))
# map plot
plot(map_sum,
main= "species diversity map")
# pie chart
lbls <- paste("species", 1:length(ras_area), sep="")
pie(ras_area, lbls,
main = "species by area (km2)",
col = rainbow(length(ras_area)))
par(mfrow=c(1,1))
print(
paste("average area covered by species = ",round(avg_area, 2),"km2", sep="" ))
}
binary_rasters(ras_list,thd_sq)
dev.off()
ras1 <- ras_list[[1]]
